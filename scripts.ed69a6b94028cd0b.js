function findInverseMatrix(b,w){function o(t){return Math.abs(t)}function S(t,l){if(t.length!==l.length&&t[0].length!==l[0].length)return!1;const e=JSON.parse(JSON.stringify(t));for(let n=0;n<e.length;n++)for(let f=0;f<e[0].length;f++)e[n][f]+=l[n][f];return e}function p(t,l){if(t[0].length!==l.length)return!1;const e=[];for(let n=0;n<t.length;n++)e.push([]);for(let n=0;n<t.length;n++)for(let f=0;f<l[0].length;f++){let s=0;for(let u=0;u<t[0].length;u++)for(let r=0;r<l.length;r++)u===r&&(s+=t[n][u]*l[r][f]);e[n].push(s)}return e}function N(t){let l=!0;for(let e=0;e<t.length;e++){let n=0,f=0;for(let s=0;s<t.length;s++)n+=o(t[e][s]),e===s&&(n-=o(t[e][s]),f=o(t[e][s])),s===t.length-1&&n>=f&&(l=!1)}if(l)return"row";l=!0;for(let e=0;e<t.length;e++){let n=0,f=0;for(let s=0;s<t.length;s++)n+=o(t[s][e]),e===s&&(n-=o(t[s][e]),f=o(t[s][e])),s===t.length-1&&n>=f&&(l=!1)}return!!l&&"column"}function M(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<l.length;e++)l.length!==t[0].length&&l[e].pop();return l}function k(t,l,e,n){return t*d("row",J(l,e))/(1-t)<n}function J(t,l){const e=JSON.parse(JSON.stringify(t));for(let n=0;n<t.length;n++)for(let f=0;f<t[0].length;f++)e[n][f]=t[n][f]-l[n][f];return e}function y(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)l[e][n]=t[e][n]/t[e][e],l[e][n]=e===n?1-l[e][n]:-1*l[e][n];return l}function d(t,l){const e=[];if("row"===t)for(let n=0;n<l.length;n++){let f=0;for(let s=0;s<l[0].length;s++)f+=o(l[n][s]);e.push(f)}else if("column"===t){if(1===l[0].length){let n=0;for(let f=0;f<l.length;f++)n+=o(l[f][0]);return n}for(let n=0;n<l.length;n++){let f=0;for(let s=0;s<l[0].length;s++)f+=o(l[s][n]);e.push(f)}}return Math.max(...e)}function j(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)l[e][n]=e===n?1:0;return l}function T(t,l,e,n,f){return t*(l*d("column",J(e,n)))/(1-l)<f}return function X(t,l){if("row"===N(t)){const e=M(t),n=[],f=j(e),s=function R(t,l){const e=JSON.parse(JSON.stringify(t));for(let n=0;n<t.length;n++)for(let f=0;f<t.length;f++)n===f&&(e[n][f]=e[n][f]/l[n][f]);return e}(f,e),u=y(e),r=d("row",u);let h=0,c=f,i=[];do{h++,i=JSON.parse(JSON.stringify(c)),c=S(p(u,i),s),n.push(c)}while(!k(r,c,i,l));return{all:n,matrix:c,count:h,matrixType:N(t),q:r}}if("column"===N(t)){const e=M(t),n=function D(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)l[e][n]=e===n?1/t[e][n]:0;return l}(e),f=[],s=y(p(n,e)),u=j(e),r=p(n,u),h=d("column",J(u,p(e,n))),c=function I(t){let l=o(t[0][0]),e=o(t[0][0]);for(let n=0;n<t.length;n++)for(let f=0;f<t.length;f++)n===f&&(l<=o(t[n][f])&&(l=o(t[n][f])),e>=o(t[n][f])&&(e=o(t[n][f])));return l/e}(e);let i=0,g=u,O=[];do{i++,O=JSON.parse(JSON.stringify(g)),g=S(p(s,O),r),f.push(g)}while(!T(c,h,g,O,l));return{matrix:g,count:i,all:f,matrixType:N(t),q:h}}return!1}(b,w)}function findX(b,w){function o(t){return Math.abs(t)}function S(t,l){if(t.length!==l.length&&t[0].length!==l[0].length)return!1;const e=JSON.parse(JSON.stringify(t));for(let n=0;n<e.length;n++)for(let f=0;f<e[0].length;f++)e[n][f]+=l[n][f];return e}function p(t,l){if(t[0].length!==l.length)return!1;const e=[];for(let n=0;n<t.length;n++)e.push([]);for(let n=0;n<t.length;n++)for(let f=0;f<l[0].length;f++){let s=0;for(let u=0;u<t[0].length;u++)for(let r=0;r<l.length;r++)u===r&&(s+=t[n][u]*l[r][f]);e[n].push(s)}return e}function N(t){let l=!0;for(let e=0;e<t.length;e++){let n=0,f=0;for(let s=0;s<t.length;s++)n+=o(t[e][s]),e===s&&(n-=o(t[e][s]),f=o(t[e][s])),s===t.length-1&&n>=f&&(l=!1)}if(l)return"row";l=!0;for(let e=0;e<t.length;e++){let n=0,f=0;for(let s=0;s<t.length;s++)n+=o(t[s][e]),e===s&&(n-=o(t[s][e]),f=o(t[s][e])),s===t.length-1&&n>=f&&(l=!1)}return!!l&&"column"}function M(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<l.length;e++)l.length!==t[0].length&&l[e].pop();return l}function k(t,l,e,n){return t*d("row",J(l,e))/(1-t)<n}function J(t,l){const e=JSON.parse(JSON.stringify(t));for(let n=0;n<t.length;n++)for(let f=0;f<t[0].length;f++)e[n][f]=t[n][f]-l[n][f];return e}function y(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)l[e][n]=t[e][n]/t[e][e],l[e][n]=e===n?1-l[e][n]:-1*l[e][n];return l}function d(t,l){const e=[];if("row"===t)for(let n=0;n<l.length;n++){let f=0;for(let s=0;s<l[0].length;s++)f+=o(l[n][s]);e.push(f)}else if("column"===t){if(1===l[0].length){let n=0;for(let f=0;f<l.length;f++)n+=o(l[f][0]);return n}for(let n=0;n<l.length;n++){let f=0;for(let s=0;s<l[0].length;s++)f+=o(l[s][n]);e.push(f)}}return Math.max(...e)}function T(t,l,e,n,f){return t*(l*d("column",J(e,n)))/(1-l)<f}return function X(t,l){if("row"===N(t)){const e=M(t),n=function R(t){const l=[];for(let e=0;e<t.length;e++)l.push([0]);for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)e===n&&(l[e][0]=t[e][t.length]/t[e][n]);return l}(t),f=y(e),s=d("row",f),u=[];let r=0,h=[];for(let i=0;i<t.length;i++)h.push([0]);let c=[];do{r++,c=JSON.parse(JSON.stringify(h)),h=S(p(f,c),n),u.push(h)}while(!k(s,h,c,l));return{matrix:h,all:u,count:r,matrixType:N(t),q:s}}if("column"===N(t)){const e=[],n=M(t),f=function D(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)l[e][n]=e===n?1/t[e][n]:0;return l}(n),s=y(p(f,n)),u=p(f,function C(t){const l=[];for(let e=0;e<t.length;e++)l.push([]);for(let e=0;e<t.length;e++)l[e].push(t[e][t.length]);return l}(t)),r=function j(t){const l=JSON.parse(JSON.stringify(t));for(let e=0;e<t.length;e++)for(let n=0;n<t.length;n++)l[e][n]=e===n?1:0;return l}(n),h=d("column",J(r,p(n,f))),c=function I(t){let l=o(t[0][0]),e=o(t[0][0]);for(let n=0;n<t.length;n++)for(let f=0;f<t.length;f++)n===f&&(l<=o(t[n][f])&&(l=o(t[n][f])),e>=o(t[n][f])&&(e=o(t[n][f])));return l/e}(n);let i=0,g=[];for(let H=0;H<t.length;H++)g.push([0]);let O=[];do{i++,O=JSON.parse(JSON.stringify(g)),g=S(p(s,O),u),e.push(g)}while(!T(c,h,g,O,l));return{all:e,matrix:g,count:i,matrixType:N(t),q:h}}return console.log("oK"),!1}(b,w)}